// This is an autogenerated file from Firebase Studio.
'use server';

/**
 * @fileOverview Waste classification AI agent.
 *
 * - classifyWaste - A function that handles the waste classification process.
 * - ClassifyWasteInput - The input type for the classifyWaste function.
 * - ClassifyWasteOutput - The return type for the classifyWaste function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const ClassifyWasteInputSchema = z.object({
  photoDataUri: z
    .string()
    .describe(
      "A photo of a waste item, as a data URI that must include a MIME type and use Base64 encoding. Expected format: 'data:<mimetype>;base64,<encoded_data>'."
    ),
});
export type ClassifyWasteInput = z.infer<typeof ClassifyWasteInputSchema>;

const ClassifyWasteOutputSchema = z.object({
  wasteType: z
    .enum(['organic', 'inorganic'])
    .describe('The type of waste: organic or inorganic.'),
  explanation: z.string().describe('Explanation of why the waste is classified as such.'),
});
export type ClassifyWasteOutput = z.infer<typeof ClassifyWasteOutputSchema>;

export async function classifyWaste(input: ClassifyWasteInput): Promise<ClassifyWasteOutput> {
  return classifyWasteFlow(input);
}

const prompt = ai.definePrompt({
  name: 'classifyWastePrompt',
  input: {schema: ClassifyWasteInputSchema},
  output: {schema: ClassifyWasteOutputSchema},
  prompt: `You are a waste management expert. Classify the waste item in the photo as either organic or inorganic.\n\nPhoto: {{media url=photoDataUri}}\n\nExplain why you classified it as such.`,
});

const classifyWasteFlow = ai.defineFlow(
  {
    name: 'classifyWasteFlow',
    inputSchema: ClassifyWasteInputSchema,
    outputSchema: ClassifyWasteOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
